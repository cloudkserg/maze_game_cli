from src.maze.maze import Maze
from src.maze.path_finder import PathFinder
from src.maze.wall_manager import WallManager
from src.maze.player import Player
from src.maze.enemy import Enemy
from src.maze.models.position import Position

def main():
    width, height, max_walls = 10, 10, 30
    maze = Maze(width, height)
    path_finder = PathFinder(maze)

    start = Position(x=0, y=0)
    end = Position(x=width-1, y=height-1)

    # Ensure a path from start to end
    path_positions = []
    queue = [start]
    visited = set()
    visited.add((start.x, start.y))
    path_finder.has_path(start, end)

    # Add walls and prune excess walls
    wall_manager = WallManager(maze, max_walls)
    wall_manager.add_additional_walls(path_positions)
    wall_manager.prune_excess_walls(start, end)

    # Initialize player and enemy
    player = Player(start)
    enemy = Enemy(Position(x=width-1, y=0))

    # Example game loop (replace with actual game logic)
    while True:
        direction = 'right'  # Example direction
        player.move(direction, maze)
        enemy.move_randomly(maze)

        if enemy.is_at_position(player.position):
            print("Game Over: The enemy has caught the player!")
            break

if __name__ == "__main__":
    main()